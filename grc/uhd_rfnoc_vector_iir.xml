<?xml version="1.0"?>
<block>
  <name>RFNoC: Vector IIR</name>
  <key>uhd_rfnoc_streamer_vector_iir</key>
  <import>import ettus</import>
  <make>ettus.rfnoc_generic(
      self.device3,
      uhd.stream_args( \# TX Stream Args
          cpu_format="fc32",
          otw_format="sc16",
          args="spp={},alpha={},beta={}".format($vlen, $alpha, $beta),
      ),
      uhd.stream_args( \# TX Stream Args
          cpu_format="fc32",
          otw_format="sc16",
          args="spp={},alpha={},beta={}".format($vlen, $alpha, $beta),
      ),
      "VectorIIR", $block_index, $device_index,
)
self.$(id).set_arg("alpha", $alpha)
self.$(id).set_arg("beta",  $beta)
  </make>
  <callback>set_arg("alpha", $alpha)</callback>
  <callback>set_arg("beta", $beta)</callback>

  <param>
    <name>Vector Length</name>
    <key>vlen</key>
    <value>256</value>
    <type>int</type>
  </param>

  <param>
    <name>Alpha</name>
    <key>alpha</key>
    <value>0.984375</value>
    <type>float</type>
  </param>

  <param>
    <name>Beta</name>
    <key>beta</key>
    <value>0.015625</value>
    <type>float</type>
  </param>

  <param>
    <name>Vector-IIR Select</name>
    <key>block_index</key>
    <value>-1</value>
    <type>int</type>
    <hide>#if int($block_index()) &lt; 0 then 'part' else 'none'#</hide>
    <tab>RFNoC Config</tab>
  </param>
  <param>
    <name>Device Select</name>
    <key>device_index</key>
    <value>-1</value>
    <type>int</type>
    <hide>#if int($device_index()) &lt; 0 then 'part' else 'none'#</hide>
    <tab>RFNoC Config</tab>
  </param>

  <param>
    <name>FPGA Module Name</name>
    <key>fpga_module_name</key>
    <value>noc_block_vector_iir</value>
    <type>string</type>
    <hide>all</hide>
    <tab>RFNoC Config</tab>
  </param>

 <check>($vlen &gt; 0 and $vlen &lt;= 4096)</check>
  <check>($alpha &gt;= 0.0 and $alpha &lt;= 1.0)</check>
  <check>($beta &gt;= 0.0 and $beta &lt;= 1.0)</check>

  <sink>
    <name>in</name>
    <type>complex</type>
    <vlen>$vlen</vlen>
    <domain>rfnoc</domain>
  </sink>

  <source>
    <name>out</name>
    <type>complex</type>
    <vlen>$vlen</vlen>
    <domain>rfnoc</domain>
  </source>
</block>
