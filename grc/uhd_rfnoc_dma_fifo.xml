<?xml version="1.0"?>
<block>
  <name>RFNoC: DmaFIFO</name>
  <key>uhd_rfnoc_streamer_dma_fifo</key>
  <import>import ettus</import>
  <make>ettus.rfnoc_generic(
    self.device3,
    uhd.stream_args( \# TX Stream Args
        cpu_format="$type",
        otw_format="$otw",
        args="gr_vlen={0},{1}".format(${grvlen}, "" if $grvlen == 1 else "spp={0}".format($grvlen)),
    ),
    uhd.stream_args( \# RX Stream Args
        cpu_format="$type",
        otw_format="$otw",
        args="gr_vlen={0},{1}".format(${grvlen}, "" if $grvlen == 1 else "spp={0}".format($grvlen)),
    ),
    "DmaFIFO", $block_index, $device_index,
)
self.$(id).set_arg("base_addr",$base_addr_0,0)
self.$(id).set_arg("depth",$depth_0,0)
self.$(id).set_arg("base_addr",$base_addr_1,1)
self.$(id).set_arg("depth",$depth_1,1)
</make>

  <param>
    <name>Num Channels</name>
    <key>num_chans</key>
    <value>1</value>
    <type>int</type>
    <option>
      <name>1</name>
      <key>1</key>
    </option>
    <option>
      <name>2</name>
      <key>2</key>
    </option>
  </param>

  <param>
    <name>Host Data Type</name>
    <key>type</key>
    <type>enum</type>
    <option>
      <name>Complex float32</name>
      <key>fc32</key>
      <opt>type:complex</opt>
    </option>
    <option>
      <name>Complex int16</name>
      <key>sc16</key>
      <opt>type:sc16</opt>
    </option>
    <option>
      <name>Byte</name>
      <key>u8</key>
      <opt>type:byte</opt>
    </option>
    <option>
      <name>VITA word32</name>
      <key>item32</key>
      <opt>type:s32</opt>
    </option>
  </param>

  <param>
    <name>Device Format</name>
    <key>otw</key>
    <type>enum</type>
    <option>
      <name>Complex int16</name>
      <key>sc16</key>
    </option>
    <option>
      <name>Complex int8</name>
      <key>sc8</key>
    </option>
    <option>
      <name>Byte</name>
      <key>u8</key>
    </option>
  </param>

  <param>
    <name>FIFO Select</name>
    <key>block_index</key>
    <value>-1</value>
    <type>int</type>
    <hide>#if int($block_index()) &lt; 0 then 'part' else 'none'#</hide>
    <tab>RFNoC Config</tab>
  </param>
  <param>
    <name>Device Select</name>
    <key>device_index</key>
    <value>-1</value>
    <type>int</type>
    <hide>#if int($device_index()) &lt; 0 then 'part' else 'none'#</hide>
    <tab>RFNoC Config</tab>
  </param>
  <param>
    <name>Base Address (Port 1)</name>
    <key>base_addr_0</key>
    <value>0</value>
    <type>int</type>
    <tab>RFNoC Config</tab>
  </param>
  <param>
    <name>Depth (Port 1)</name>
    <key>depth_0</key>
    <value>33554432</value>
    <type>int</type>
    <tab>RFNoC Config</tab>
  </param>
  <param>
    <name>Base Address (Port 2)</name>
    <key>base_addr_1</key>
    <value>33554432</value>
    <type>int</type>
    <hide>#if int($num_chans()) &lt; 2 then 'part' else 'none'#</hide>
    <tab>RFNoC Config</tab>
  </param>
  <param>
    <name>Depth (Port 2)</name>
    <key>depth_1</key>
    <value>33554432</value>
    <type>int</type>
    <hide>#if int($num_chans()) &lt; 2 then 'part' else 'none'#</hide>
    <tab>RFNoC Config</tab>
  </param>

  <param>
    <name>FPGA Module Name</name>
    <key>fpga_module_name</key>
    <value>noc_block_axi_dma_fifo</value>
    <type>string</type>
    <hide>all</hide>
    <tab>RFNoC Config</tab>
  </param>

  <param>
    <name>Force Vector Length</name>
    <key>grvlen</key>
    <value>1</value>
    <type>int</type>
  </param>

  <sink>
    <name>in</name>
    <type>$type.type</type>
    <vlen>$grvlen</vlen>
    <domain>rfnoc</domain>
    <nports>$num_chans</nports>
  </sink>

  <source>
    <name>out</name>
    <type>$type.type</type>
    <vlen>$grvlen</vlen>
    <domain>rfnoc</domain>
    <nports>$num_chans</nports>
  </source>
</block>
